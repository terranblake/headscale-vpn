apiVersion: apps/v1
kind: Deployment
metadata:
  name: vpn-exit-node
  namespace: headscale-vpn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vpn-exit-node
  template:
    metadata:
      labels:
        app: vpn-exit-node
    spec:
      containers:
      - name: gluetun
        image: qmcgaw/gluetun
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        env:
        - name: VPN_SERVICE_PROVIDER
          value: "custom"
        - name: VPN_TYPE
          value: "wireguard"
        - name: WIREGUARD_MTU
          value: "1280"
        # Route all traffic through VPN EXCEPT cluster networking
        # This allows Tailscale to reach Headscale while routing everything else through VPN
        - name: OUTBOUND_SUBNETS
          value: "0.0.0.0/0"
        - name: OUTBOUND_SUBNETS_EXCLUDE
          value: "10.42.0.0/16"
        volumeMounts:
        - name: tun-device
          mountPath: /dev/net/tun
        - name: gluetun-data
          mountPath: /gluetun
        - name: vpn-config
          mountPath: /gluetun/wireguard
          readOnly: true
        ports:
        - containerPort: 8000
          name: control
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"  
            cpu: "100m"
      - name: dns-forwarder
        image: alpine:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          # Install dnsmasq
          apk add --no-cache dnsmasq
          
          # Create dnsmasq config that forwards all DNS through the VPN
          cat > /etc/dnsmasq.conf << 'EOF'
          # Listen on all interfaces
          interface=*
          bind-interfaces
          
          # Forward all DNS queries through the VPN tunnel
          server=1.1.1.1
          server=8.8.8.8
          
          # Don't read /etc/resolv.conf
          no-resolv
          
          # Don't read /etc/hosts
          no-hosts
          
          # Cache settings
          cache-size=1000
          
          # Log queries for debugging
          log-queries
          log-facility=/var/log/dnsmasq.log
          EOF
          
          # Start dnsmasq
          exec dnsmasq --no-daemon --log-facility=-
        ports:
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "64Mi"
            cpu: "50m"
      - name: tailscale
        image: tailscale/tailscale
        env:
        - name: TS_AUTHKEY
          valueFrom:
            secretKeyRef:
              name: headscale-secrets
              key: headscale-authkey
        - name: TS_STATE_DIR
          value: "/var/lib/tailscale"
        - name: TS_HOSTNAME
          value: "vpn-exit-node"
        - name: TS_EXTRA_ARGS
          value: "--login-server=http://headscale.headscale-vpn:8080 --advertise-exit-node --accept-routes=false --accept-dns=false --advertise-tags=tag:exit-node"
        - name: TS_USERSPACE
          value: "true"
        - name: TS_ACCEPT_DNS
          value: "false"
        - name: TS_KUBE_SECRET
          value: ""
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
        volumeMounts:
        - name: vpn-exit-data
          mountPath: /var/lib/tailscale
        - name: tun-device
          mountPath: /dev/net/tun
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
      volumes:
      - name: vpn-exit-data
        persistentVolumeClaim:
          claimName: vpn-exit-data-pvc
      - name: gluetun-data
        persistentVolumeClaim:
          claimName: gluetun-data-pvc
      - name: tun-device
        hostPath:
          path: /dev/net/tun
      - name: vpn-config
        secret:
          secretName: vpn-exit-secrets
      nodeSelector:
        kubernetes.io/os: linux

---
apiVersion: v1
kind: Service
metadata:
  name: vpn-exit-dns
  namespace: headscale-vpn
spec:
  selector:
    app: vpn-exit-node
  ports:
  - name: dns-tcp
    port: 53
    protocol: TCP
    targetPort: 53
  - name: dns-udp
    port: 53
    protocol: UDP
    targetPort: 53
  type: ClusterIP
